@page "/Account/UserDetails"
@using Microsoft.AspNetCore.Identity
@using Savanna.Web.Models
@using Microsoft.AspNetCore.Authorization
@using Savanna.Web.Constants
@attribute [Authorize]
@rendermode InteractiveServer

@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>User Details</PageTitle>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>User Details</h1>
        <a href="/Account/Manage" class="btn btn-primary">
            <i class="bi bi-pencil-square"></i> Edit Profile
        </a>
    </div>

    @if (_user == null)
    {
        <div class="d-flex justify-content-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-8 mx-auto">
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h3 class="card-title mb-0">
                            <i class="bi bi-person-badge me-2"></i> User Profile
                        </h3>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <tbody>
                                    <tr>
                                        <th style="width: 30%">User ID</th>
                                        <td>@_user.Id</td>
                                    </tr>
                                    <tr>
                                        <th>Username</th>
                                        <td>@_user.UserName</td>
                                    </tr>
                                    <tr>
                                        <th>Email</th>
                                        <td>
                                            @_user.Email
                                            @if (_user.EmailConfirmed)
                                            {
                                                <span class="badge bg-success ms-2">@WebConstants.VerifiedBadgeText</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning ms-2">@WebConstants.NotVerifiedBadgeText</span>
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Phone Number</th>
                                        <td>
                                            @if (string.IsNullOrEmpty(_user.PhoneNumber))
                                            {
                                                <span class="text-muted">@WebConstants.NotProvidedText</span>
                                            }
                                            else
                                            {
                                                @_user.PhoneNumber
                                                @if (_user.PhoneNumberConfirmed)
                                                {
                                                    <span class="badge bg-success ms-2">@WebConstants.VerifiedBadgeText</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning ms-2">@WebConstants.NotVerifiedBadgeText</span>
                                                }
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Account Status</th>
                                        <td>
                                            @if (_user.LockoutEnd != null && _user.LockoutEnd > DateTimeOffset.Now)
                                            {
                                                <span class="badge bg-danger">@WebConstants.LockedStatusText</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">@WebConstants.ActiveStatusText</span>
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Two-Factor Auth</th>
                                        <td>
                                            @if (_user.TwoFactorEnabled)
                                            {
                                                <span class="badge bg-success">@WebConstants.EnabledText</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">@WebConstants.DisabledText</span>
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Roles</th>
                                        <td>
                                            @if (_userRoles != null && _userRoles.Any())
                                            {
                                                @foreach (var role in _userRoles)
                                                {
                                                    <span class="badge bg-primary me-1">@role</span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="text-muted">@WebConstants.NoRolesAssignedText</span>
                                            }
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between">
                            <a href="/" class="btn btn-secondary">
                                <i class="bi bi-house"></i> Back to Home
                            </a>
                            <a href="/Account/Manage" class="btn btn-primary">
                                <i class="bi bi-pencil-square"></i> Edit Profile
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private ApplicationUser? _user;
    private IList<string>? _userRoles;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserDataAsync();
    }

    private async Task LoadUserDataAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            _user = await UserManager.GetUserAsync(user);
            if (_user != null)
            {
                _userRoles = await UserManager.GetRolesAsync(_user);
            }
        }
        else
        {
            NavigationManager.NavigateTo("/Account/Login");
        }
    }
}